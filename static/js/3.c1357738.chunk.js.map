{"version":3,"sources":["../node_modules/shortid/lib/alphabet.js","components/Contacts/Contacts.module.css","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","icons/delete.svg","components/Contacts/ContactForm.js","components/Contacts/Filter.js","components/Contacts/ContactList.js","views/ContactsPage.js"],"names":["alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","id","RegExp","replace","test","_path","_path2","ContactForm","state","name","addList","contact","shortid","setState","prevState","contacts","loginInputId","handleInputChange","evt","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","styles","contactsBlock","this","formName","input","type","onChange","pattern","title","required","button","Component","connect","dispatch","contactsOperations","submit","contactsSelector","getValue","contactsActions","changeFilter","_excluded","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","titleId","xmlns","viewBox","ref","d","fill","ForwardRef","contactList","getVisibleContacts","onDeleteContact","contactId","deleteContact","map","contactItem","onClick","buttonDelete","width","height","App","fetchContacts"],"mappings":"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","file":"static/js/3.c1357738.chunk.js","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Contacts_App__QRBuA\",\"input\":\"Contacts_input__1g3Ra\",\"button\":\"Contacts_button__2Mahy\",\"buttonDelete\":\"Contacts_buttonDelete__1p-JM\",\"contactsBlock\":\"Contacts_contactsBlock__2rf2W\",\"contactItem\":\"Contacts_contactItem__12iNh\"};","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b.svg\";\nexport { ForwardRef as ReactComponent };","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { contactsOperations } from \"../../redux/contacts\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addList = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  loginInputId = shortid.generate();\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({\r\n      id: shortid.generate(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.contactsBlock}>\r\n        <form onSubmit={this.handleSubmit} className={styles.formName}>\r\n          <label id={this.loginInputId}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type='text'\r\n              name='name'\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label id={this.loginInputId}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type='tel'\r\n              name='number'\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n              pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n              title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type='submit'>\r\n            Add conract\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactsOperations.submit(contact)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsActions, contactsSelector } from \"../../redux/contacts\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={styles.contactsBlock}>\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelector.getValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) =>\r\n    dispatch(contactsActions.changeFilter(evt.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Contacts.module.css\";\r\nimport { ReactComponent as CloseIcon } from \"../../icons/delete.svg\";\r\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n  <>\r\n    <ul className={styles.contactsBlock}>\r\n      {contactList.map(({ name, number, id }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDeleteContact(id)}\r\n            className={styles.buttonDelete}\r\n            aria-label='Видалити контакт'\r\n          >\r\n            <CloseIcon width='20' height='20' fill='#fff' />\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: contactsSelector.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (contactId) =>\r\n    dispatch(contactsOperations.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../components/Contacts/ContactForm\";\r\nimport Filter from \"../components/Contacts/Filter\";\r\nimport ContactList from \"../components/Contacts/ContactList\";\r\nimport styles from \"../components/Contacts/Contacts.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations } from \"../redux/contacts\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n"],"sourceRoot":""}