{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-reduser.js","components/Loader/Loader.js","routes.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","Boolean","getUsername","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactSuccess","addContactsError","addContactRequest","changeFilter","deleteContactSuccess","deleteContactsError","deleteContactRequest","submit","number","item","actions","deleteContact","contactId","delete","then","catch","fetchContacts","getValue","contacts","filter","getVisibleContacts","createSelector","items","filterLowerCase","toLowerCase","includes","map","contact","alert","id","Loader","className","Component","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","routes","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","connect","authSelectors","defaultAvatar","src","alt","width","type","onClick","AuthNav","isAuthenticated","HomeView","lazy","RegisterPage","LoginPage","ContactsPage","App","this","props","onGetCurrentUser","fallback","path","component","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReduser","persistReducer","authReducer","devContacts","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8b108e97.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('https://connections-api.herokuapp.com/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('https://connections-api.herokuapp.com/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('https://connections-api.herokuapp.com/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('https://connections-api.herokuapp.com/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser};\n","const getIsAuthenticated = state => Boolean(state.auth.token);\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactsError = createAction(\"contacts/addContactsError\");\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactsError,\r\n  deleteContactSuccess,\r\n  deleteContactsError,\r\n  deleteContactRequest,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactsError(error.message)));\r\n};\r\n\r\nconst submit =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const item = { name, number };\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/contacts\", item);\r\n      dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addContactsError(error.message));\r\n    }\r\n\r\n  };\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactsError(error.message)));\r\n};\r\n\r\nexport default {\r\n  submit,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getValue = (state) => state.contacts.filter;\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getValue, getAllContacts],\r\n  (filter, items) => {\r\n    const filterLowerCase = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filterLowerCase)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getValue,\r\n  getVisibleContacts,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst {\r\n  fetchContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) =>\r\n    state.map((contact) => contact.name).includes(payload.name)\r\n      ? alert(`${payload.name} is already in contacts.`)\r\n      : [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { Component } from \"react\";\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div className='preloader'>\r\n        <div className='preloader__row'>\r\n          <div className='preloader__item'></div>\r\n          <div className='preloader__item'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  home: \"/\",\r\n  registerPage: \"/register\",\r\n  loginPage: \"/login\",\r\n  contactsPage: \"/contacts\",\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"../../routes\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n    <NavLink to={routes.home}\r\n     exact         \r\n     style={styles.link}\r\n     activeStyle={styles.activeLink}\r\n>\r\n      Главная\r\n    </NavLink>\r\n    <NavLink to={routes.contactsPage}\r\n     exact         \r\n     style={styles.link}\r\n     activeStyle={styles.activeLink}\r\n   >\r\n      Заметки\r\n    </NavLink>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n              to={routes.registerPage}\n\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to={routes.loginPage}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n\n\n\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Navigation from \"../Navigation\";\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n\r\n\r\nconst AppBar = ({isAuthenticated}) => {\r\n  return (\r\n    <header className ='Nav'>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps =(state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","// import \"./App.css\";\nimport React, { Component, Suspense, lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Loader from \"./components/Loader\";\nimport AppBar from \"./components/AppBar\";\n// import \"./style.css\";\nimport routes from \"./routes\";\nimport { connect } from \"react-redux\";\nimport { authOperations } from \"./redux/auth\";\n\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView\" /*webpackChunkName *home-view**/)\n);\nconst RegisterPage = lazy(() =>\n  import(\"./views/RegisterPage\" /*webpackChunkName *movies-page**/)\n);\nconst LoginPage = lazy(() =>\n  import(\"./views/LoginPage\" /*webpackChunkName *movie-details-page**/)\n);\nconst ContactsPage = lazy(() =>\n  import(\"./views/ContactsPage\" /*webpackChunkName *movie-details-page**/)\n);\n\n\n\nclass App extends Component{\n  componentDidMount(){\n    this.props.onGetCurrentUser();\n  }\n  render(){\n    return(\n      <>\n      <AppBar />\n\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route exact path={routes.home} component={HomeView} />\n          <Route exact path={routes.registerPage} component={RegisterPage} />\n          <Route path={routes.loginPage} component={LoginPage} />\n          <Route path={routes.contactsPage} component={ContactsPage} />\n\n          <Route component={HomeView} />\n        </Switch>\n      </Suspense>\n    </>\n    )\n  }\n}\n\n// const App = () => {\n//   return (\n//     <>\n//       <AppBar />\n\n//       <Suspense fallback={<Loader />}>\n//         <Switch>\n//           <Route exact path={routes.home} component={HomeView} />\n//           <Route exact path={routes.registerPage} component={RegisterPage} />\n//           <Route path={routes.loginPage} component={LoginPage} />\n//           <Route path={routes.contactsPage} component={ContactsPage} />\n\n//           <Route component={HomeView} />\n//         </Switch>\n//       </Suspense>\n//     </>\n//   );\n// };\n\nconst mapDispatchToProps ={\n  onGetCurrentUser: authOperations.getCurrentUser\n}\nexport default connect(null, mapDispatchToProps) (App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { contactsReduser } from \"./contacts\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReduser,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devContacts: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/es/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}